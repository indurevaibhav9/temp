

pipeline {
    agent {
        docker {
            //image 'node:18-alpine'
             image 'cypress/base:18.16.0'
            args '-u root:root'
            reuseNode true
        }
    }

    environment {
        GIT_URL = 'git@github.com:spreezy-tech/spreezy-frontend.git'
        GIT_BRANCH = 'feature-nandini'
        CREDENTIALS_ID = 'spreezy-frontend-keys'
        EMAIL_TO = 'spreezyindia@gmail.com'
        EMAIL_FROM = 'nandiniachugatla@gmail.com'
        EMAIL_SUBJECT = 'Build successful : Frontend'
        EMAIL_BODY = 'Attach console logs. Build is successful for'
        EMAIL_CC = ''
        EMAIL_BCC = ''
        EMAIL_REPLY_TO = ''
    }


    stages {


        stage('Clone Repository'){
            steps {
                git branch: env.GIT_BRANCH, credentialsId: env.CREDENTIALS_ID, url: env.GIT_URL
            }
        }

        stage('Install All dependencies') {
            steps{
              // sh 'rm -rf node_modules'
              // sh 'npm cache clean --force'
                sh 'npm install'
            }
            }
        
        
        stage('Notify Success') {
            steps {
                script {
                    // Access the build number using currentBuild
                    def buildNumber = currentBuild.number
                    def updatedSubject = "${EMAIL_SUBJECT} ${buildNumber}"
                    def updatedBody = "${EMAIL_BODY}  ${buildNumber} at\n\n"

                    mail to: env.EMAIL_TO, cc: env.EMAIL_CC, bcc: env.EMAIL_BCC,
                         from: env.EMAIL_FROM, replyTo: env.EMAIL_REPLY_TO,
                         subject: updatedSubject, body: updatedBody
                }
            }
        }


        stage('Run Tests') {
            steps {
            sh 'npm start &'

            // Wait for Angular application to start
            sh 'npx wait-on http://localhost:4200'

            // Run Cypress tests
            sh 'NO_COLOR=1 npx cypress run'

            sh 'pkill -f "npm start"'


            }
        }
        
         stage('Build Project') {
            steps {
                sh 'npm run build'
            }
        }
        stage('Generate APK'){
            steps{
                sh 'npx cap add android'
            }
        }
    }
    
        post{
        always{
                
                slackSend channel: 'devops-jenkins-updates', message: "Please find status of pipeline here Status - ${currentBuild.currentResult} ${env.JOB_NAME}  ${env.BUILD_NUMBER} ${env.BUILD_URL}"   
    
        }
    }





    

